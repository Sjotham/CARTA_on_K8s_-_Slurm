apiVersion: apps/v1
kind: Deployment
metadata:
  name: carta-backend-b
  namespace: carta
  labels: { app: carta-backend, instance: b }
spec:
  replicas: 1
  strategy: { type: Recreate }
  selector: { matchLabels: { app: carta-backend, instance: b } }
  template:
    metadata:
      labels: { app: carta-backend, instance: b }
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: carta-backend
          image: cartavis/carta:beta
          imagePullPolicy: IfNotPresent
          ports: [{ name: http, containerPort: 3002 }]
          volumeMounts:
            - name: carta-storage
              mountPath: /images
              subPath: b
          startupProbe: { tcpSocket: { port: 3002 }, failureThreshold: 30, periodSeconds: 2 }
          readinessProbe: { tcpSocket: { port: 3002 }, initialDelaySeconds: 10, periodSeconds: 10, failureThreshold: 3 }
          livenessProbe:  { tcpSocket: { port: 3002 }, initialDelaySeconds: 30, periodSeconds: 10, failureThreshold: 3 }
      volumes:
        - name: carta-storage
          persistentVolumeClaim:
            claimName: carta-data
---
apiVersion: v1
kind: Service
metadata:
  name: carta-backend-b
  namespace: carta
spec:
  type: NodePort
  selector: { app: carta-backend, instance: b }
  ports:
    - name: tcp
      port: 3002
      targetPort: 3002
      nodePort: 32012
